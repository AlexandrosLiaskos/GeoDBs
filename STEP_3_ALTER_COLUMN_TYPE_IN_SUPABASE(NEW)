### STEP_3_ALTER_COLUMN_TYPE_IN_SUPABASE(NEW)

**Change the year column from TEXT to INTEGER in Supabase database**

1. **Run the ALTER TABLE command in Supabase SQL Editor:**

   ```sql
   -- Change year column from TEXT to INTEGER
   -- USING clause handles the conversion from text to integer
   ALTER TABLE floods 
   ALTER COLUMN year TYPE INTEGER 
   USING CASE 
     WHEN year IS NULL OR year = '' THEN NULL
     ELSE year::INTEGER
   END;
   ```

   **What this does:**
   - Converts the `year` column from TEXT to INTEGER data type
   - The USING clause specifies how to convert existing data
   - NULL and empty strings remain as NULL
   - Valid numeric strings are cast to integers
   - If any non-numeric values remain, the query will fail (that's why STEP_2 is crucial)

2. **Alternative approach if the above fails:**
   If you encounter errors due to remaining invalid data:

   ```sql
   -- More lenient conversion that handles edge cases
   ALTER TABLE floods 
   ALTER COLUMN year TYPE INTEGER 
   USING CASE 
     WHEN year IS NULL OR year = '' THEN NULL
     WHEN year ~ '^[0-9]+ THEN year::INTEGER
     ELSE NULL
   END;
   ```

   This converts any remaining non-numeric values to NULL instead of failing.

3. **Verify the column type change:**
   ```sql
   -- Check the column data type
   SELECT column_name, data_type, is_nullable
   FROM information_schema.columns
   WHERE table_name = 'floods' AND column_name = 'year';
   
   -- Should show: data_type = 'integer'
   ```

4. **Test sorting behavior:**
   ```sql
   -- Sort by year (should now be numeric)
   SELECT id, year, location_name
   FROM floods
   WHERE year IS NOT NULL
   ORDER BY year DESC
   LIMIT 20;
   
   -- Verify records 1885-1994 now sort correctly
   SELECT id, year, location_name
   FROM floods
   WHERE id >= 1885 AND id <= 1994
   ORDER BY year DESC;
   ```

   **Expected result:** Older years (1980s-1990s) should now appear at the bottom when sorting DESC, not at the top.

5. **Verify the index still works:**
   The existing index `idx_floods_year` (created in `db/migrations/supabase_schema.sql` line 36) should automatically adapt to the new data type, but verify:

   ```sql
   -- Check index exists and is valid
   SELECT indexname, indexdef 
   FROM pg_indexes 
   WHERE tablename = 'floods' AND indexname = 'idx_floods_year';
   ```

**Troubleshooting:**
- If the ALTER fails with "invalid input syntax for type integer", go back to STEP_2 and identify remaining non-numeric values
- If you get permission errors, ensure you're using the service role key or have proper admin access
- The operation may take a few seconds for 1992 records, which is normal